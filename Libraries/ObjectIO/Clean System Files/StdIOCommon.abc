.comp 920 00011101001
.start _nostart_
.depend "commondef" "20170202141542"
.depend "systemid" "20170202141542"
.depend "device" "20170202141542"
.depend "id" "20170202141542"
.depend "oskey" "20170202141542"
.depend "StdKey" "20170202141542"
.depend "StdPicture" "20170202141542"
.depend "StdIOBasic" "20170202141542"
.depend "StdPictureDef" "20170202141542"
.depend "osfont" "20170202141542"
.depend "ostypes" "20170202141542"
.depend "ostoolbox" "20170202141542"
.depend "osrgn" "20170202141542"
.depend "ospicture" "20170202141542"
.depend "osbitmap" "20170202141542"
.depend "StdBitmap" "20170202141542"
.depend "StdList" "20170202141542"
.depend "StdClass" "20170202141542"
.depend "StdFile" "20170202141542"
.depend "StdString" "20170202141542"
.depend "_SystemArray" "20170202141542"
.depend "StdArray" "20170202141542"
.depend "StdChar" "20170202141542"
.depend "StdReal" "20170202141542"
.depend "StdInt" "20170202141542"
.depend "StdBool" "20170202141542"
.depend "StdOverloaded" "20170202141542"
.depend "StdFunc" "20170202141542"
.depend "StdMaybe" "20170202141542"
.depend "StdIOCommon" "20170202141542"
.module m_StdIOCommon "StdIOCommon" "20170202141542"
.endinfo
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc _ind
.implab _indirection _eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.implab e_commondef_sstateMap2
.implab e_id_s==;27
.implab e_id_stoString;30
.implab e_oskey_s==;32
.impdesc e_oskey_dtoString;33
.implab e_oskey_ntoString;33
.impdesc e_StdPicture_dunfill;103
.implab e_StdPicture_sunfill;103
.implab e_StdIOBasic_srectangleSize
.implab e_StdIOBasic_s==;18
.implab e_StdIOBasic_szero;21
.impdesc e_StdIOBasic_dtoString;24
.implab e_StdIOBasic_ntoString;24
.impdesc e_StdIOBasic_dtoString;27
.implab e_StdIOBasic_stoString;27
.impdesc e_StdIOBasic_rPoint2
.impdesc e_StdIOBasic_rRectangle
.implab e_StdList_sflatten
.impdesc e_StdList_dmap
.implab e_StdList_smap
.implab e_StdList_nmap e_StdList_eamap
.implab e_StdList_szip2
.implab e_StdString_s==;2
.impdesc e_StdString_dtoString;5
.implab e_StdString_stoString;5
.implab e_StdString_ntoString;5
.implab e_StdString_stoString;6
.implab e_StdString_stoString;9
.implab e_StdString_s+++;11
.implab e_StdChar_s==;18
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_s*;9
.implab e_StdInt_s/;10
.implab e_StdInt_s^;12
.implab e_StdInt_sabs;13
.implab e_StdInt_s==;16
.implab e_StdInt_stoInt;20
.implab e_StdBool_snot
.implab e_StdBool_s==;3
.implab e_StdBool_sfromBool;6
.export e_StdIOCommon_dAble
.desc0 e_StdIOCommon_dAble 0 "Able"
.export e_StdIOCommon_dUnable
.desc0 e_StdIOCommon_dUnable 1 "Unable"
.export e_StdIOCommon_dMark
.desc0 e_StdIOCommon_dMark 0 "Mark"
.export e_StdIOCommon_dNoMark
.desc0 e_StdIOCommon_dNoMark 1 "NoMark"
.export e_StdIOCommon_dCharKey
.desc e_StdIOCommon_dCharKey _hnf _add_arg 2 0 "CharKey"
.export e_StdIOCommon_dSpecialKey
.desc e_StdIOCommon_dSpecialKey _hnf _add_arg 3 0 "SpecialKey"
.export e_StdIOCommon_dKeyLost
.desc e_StdIOCommon_dKeyLost _hnf _hnf 0 0 "KeyLost"
.export e_StdIOCommon_dKeyDown
.desc e_StdIOCommon_dKeyDown _hnf _add_arg 1 0 "KeyDown"
.export e_StdIOCommon_dKeyUp
.desc e_StdIOCommon_dKeyUp _hnf _hnf 0 0 "KeyUp"
.export e_StdIOCommon_dIsCharKey
.desc e_StdIOCommon_dIsCharKey _hnf _add_arg 1 0 "IsCharKey"
.export e_StdIOCommon_dIsSpecialKey
.desc e_StdIOCommon_dIsSpecialKey _hnf _add_arg 1 0 "IsSpecialKey"
.export e_StdIOCommon_dMouseMove
.desc e_StdIOCommon_dMouseMove _hnf _add_arg 2 0 "MouseMove"
.export e_StdIOCommon_dMouseDown
.desc e_StdIOCommon_dMouseDown _hnf _add_arg 3 0 "MouseDown"
.export e_StdIOCommon_dMouseDrag
.desc e_StdIOCommon_dMouseDrag _hnf _add_arg 2 0 "MouseDrag"
.export e_StdIOCommon_dMouseUp
.desc e_StdIOCommon_dMouseUp _hnf _add_arg 2 0 "MouseUp"
.export e_StdIOCommon_dMouseLost
.desc e_StdIOCommon_dMouseLost _hnf _hnf 0 0 "MouseLost"
.export e_StdIOCommon_dButtonStillUp
.desc0 e_StdIOCommon_dButtonStillUp 0 "ButtonStillUp"
.export e_StdIOCommon_dButtonDown
.desc0 e_StdIOCommon_dButtonDown 1 "ButtonDown"
.export e_StdIOCommon_dButtonDoubleDown
.desc0 e_StdIOCommon_dButtonDoubleDown 2 "ButtonDoubleDown"
.export e_StdIOCommon_dButtonTripleDown
.desc0 e_StdIOCommon_dButtonTripleDown 3 "ButtonTripleDown"
.export e_StdIOCommon_dButtonStillDown
.desc0 e_StdIOCommon_dButtonStillDown 4 "ButtonStillDown"
.export e_StdIOCommon_dButtonUp
.desc0 e_StdIOCommon_dButtonUp 5 "ButtonUp"
.export e_StdIOCommon_rSliderState
.record e_StdIOCommon_rSliderState iii 0 3 "SliderState"
.descexp e_StdIOCommon_tSliderState e_StdIOCommon_cSliderState _hnf 3 1 "SliderState"
.n 3 e_StdIOCommon_tSliderState
.o 1 0
e_StdIOCommon_cSliderState
	push_node _cycle_in_spine 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 2
	pushI_a 1
	pushI_a 0
	pop_a 3
	fill_r e_StdIOCommon_rSliderState 0 3 0 0 0
	pop_b 3
.d 1 0
	rtn
.export e_StdIOCommon_dSliderState.sliderMin
.export e_StdIOCommon_nSliderState.sliderMin
.descs e_StdIOCommon_dSliderState.sliderMin e_StdIOCommon_nSliderState.sliderMin INT 1 0 "SliderState.sliderMin"
.n -3 e_StdIOCommon_dSliderState.sliderMin
.o 1 0
e_StdIOCommon_nSliderState.sliderMin
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 3 1 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dSliderState.sliderMax
.export e_StdIOCommon_nSliderState.sliderMax
.descs e_StdIOCommon_dSliderState.sliderMax e_StdIOCommon_nSliderState.sliderMax INT 3 0 "SliderState.sliderMax"
.n -3 e_StdIOCommon_dSliderState.sliderMax
.o 1 0
e_StdIOCommon_nSliderState.sliderMax
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 3 2 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dSliderState.sliderThumb
.export e_StdIOCommon_nSliderState.sliderThumb
.descs e_StdIOCommon_dSliderState.sliderThumb e_StdIOCommon_nSliderState.sliderThumb INT 4 0 "SliderState.sliderThumb"
.n -3 e_StdIOCommon_dSliderState.sliderThumb
.o 1 0
e_StdIOCommon_nSliderState.sliderThumb
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 3 3 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_rUpdateState
.record e_StdIOCommon_rUpdateState aaa 3 0 "UpdateState"
.descexp e_StdIOCommon_tUpdateState e_StdIOCommon_cUpdateState _hnf 3 1 "UpdateState"
.n 3 e_StdIOCommon_tUpdateState
.o 1 0
e_StdIOCommon_cUpdateState
	push_node _cycle_in_spine 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	fill_r e_StdIOCommon_rUpdateState 3 0 3 0 0
	pop_a 3
.d 1 0
	rtn
.export e_StdIOCommon_dUpdateState.oldFrame
.export e_StdIOCommon_nUpdateState.oldFrame
.descs e_StdIOCommon_dUpdateState.oldFrame e_StdIOCommon_nUpdateState.oldFrame _ 1 0 "UpdateState.oldFrame"
.n -4 e_StdIOCommon_dUpdateState.oldFrame
.o 1 0
e_StdIOCommon_nUpdateState.oldFrame
	push_node _cycle_in_spine 1
	jsr_eval 0
	repl_r_args_a 3 0 1 1
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_dUpdateState.newFrame
.export e_StdIOCommon_nUpdateState.newFrame
.descs e_StdIOCommon_dUpdateState.newFrame e_StdIOCommon_nUpdateState.newFrame _ 3 0 "UpdateState.newFrame"
.n -4 e_StdIOCommon_dUpdateState.newFrame
.o 1 0
e_StdIOCommon_nUpdateState.newFrame
	push_node _cycle_in_spine 1
	jsr_eval 0
	repl_r_args_a 3 0 2 1
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_dUpdateState.updArea
.export e_StdIOCommon_nUpdateState.updArea
.export e_StdIOCommon_eaUpdateState.updArea
.descs e_StdIOCommon_dUpdateState.updArea e_StdIOCommon_nUpdateState.updArea _ 4 0 "UpdateState.updArea"
.n -4 e_StdIOCommon_dUpdateState.updArea e_StdIOCommon_eaUpdateState.updArea
.o 1 0
e_StdIOCommon_nUpdateState.updArea
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_eaUpdateState.updArea
	jsr_eval 0
	repl_r_args_a 3 0 3 1
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_rModifiers
.record e_StdIOCommon_rModifiers bbbbb 0 5 "Modifiers"
.descexp e_StdIOCommon_tModifiers e_StdIOCommon_cModifiers _hnf 5 1 "Modifiers"
.n 5 e_StdIOCommon_tModifiers
.o 1 0
e_StdIOCommon_cModifiers
	push_node _cycle_in_spine 5
	jsr_eval 4
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushB_a 4
	pushB_a 3
	pushB_a 2
	pushB_a 1
	pushB_a 0
	pop_a 5
	fill_r e_StdIOCommon_rModifiers 0 5 0 0 0
	pop_b 5
.d 1 0
	rtn
.export e_StdIOCommon_dModifiers.shiftDown
.export e_StdIOCommon_nModifiers.shiftDown
.descs e_StdIOCommon_dModifiers.shiftDown e_StdIOCommon_nModifiers.shiftDown BOOL 1 0 "Modifiers.shiftDown"
.n -3 e_StdIOCommon_dModifiers.shiftDown
.o 1 0
e_StdIOCommon_nModifiers.shiftDown
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 5 1 1
	pop_a 1
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dModifiers.optionDown
.export e_StdIOCommon_nModifiers.optionDown
.descs e_StdIOCommon_dModifiers.optionDown e_StdIOCommon_nModifiers.optionDown BOOL 3 0 "Modifiers.optionDown"
.n -3 e_StdIOCommon_dModifiers.optionDown
.o 1 0
e_StdIOCommon_nModifiers.optionDown
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 5 2 1
	pop_a 1
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dModifiers.commandDown
.export e_StdIOCommon_nModifiers.commandDown
.descs e_StdIOCommon_dModifiers.commandDown e_StdIOCommon_nModifiers.commandDown BOOL 4 0 "Modifiers.commandDown"
.n -3 e_StdIOCommon_dModifiers.commandDown
.o 1 0
e_StdIOCommon_nModifiers.commandDown
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 5 3 1
	pop_a 1
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dModifiers.controlDown
.export e_StdIOCommon_nModifiers.controlDown
.descs e_StdIOCommon_dModifiers.controlDown e_StdIOCommon_nModifiers.controlDown BOOL 5 0 "Modifiers.controlDown"
.n -3 e_StdIOCommon_dModifiers.controlDown
.o 1 0
e_StdIOCommon_nModifiers.controlDown
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 5 4 1
	pop_a 1
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dModifiers.altDown
.export e_StdIOCommon_nModifiers.altDown
.descs e_StdIOCommon_dModifiers.altDown e_StdIOCommon_nModifiers.altDown BOOL 6 0 "Modifiers.altDown"
.n -3 e_StdIOCommon_dModifiers.altDown
.o 1 0
e_StdIOCommon_nModifiers.altDown
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 5 5 1
	pop_a 1
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_dFix
.desc e_StdIOCommon_dFix _hnf _hnf 0 0 "Fix"
.export e_StdIOCommon_dLeftTop
.desc e_StdIOCommon_dLeftTop _hnf _hnf 0 0 "LeftTop"
.export e_StdIOCommon_dRightTop
.desc e_StdIOCommon_dRightTop _hnf _hnf 0 0 "RightTop"
.export e_StdIOCommon_dLeftBottom
.desc e_StdIOCommon_dLeftBottom _hnf _hnf 0 0 "LeftBottom"
.export e_StdIOCommon_dRightBottom
.desc e_StdIOCommon_dRightBottom _hnf _hnf 0 0 "RightBottom"
.export e_StdIOCommon_dLeft
.desc e_StdIOCommon_dLeft _hnf _hnf 0 0 "Left"
.export e_StdIOCommon_dCenter
.desc e_StdIOCommon_dCenter _hnf _hnf 0 0 "Center"
.export e_StdIOCommon_dRight
.desc e_StdIOCommon_dRight _hnf _hnf 0 0 "Right"
.export e_StdIOCommon_dLeftOf
.desc e_StdIOCommon_dLeftOf _hnf _add_arg 1 0 "LeftOf"
.export e_StdIOCommon_dRightTo
.desc e_StdIOCommon_dRightTo _hnf _add_arg 1 0 "RightTo"
.export e_StdIOCommon_dAbove
.desc e_StdIOCommon_dAbove _hnf _add_arg 1 0 "Above"
.export e_StdIOCommon_dBelow
.desc e_StdIOCommon_dBelow _hnf _add_arg 1 0 "Below"
.export e_StdIOCommon_dLeftOfPrev
.desc e_StdIOCommon_dLeftOfPrev _hnf _hnf 0 0 "LeftOfPrev"
.export e_StdIOCommon_dRightToPrev
.desc e_StdIOCommon_dRightToPrev _hnf _hnf 0 0 "RightToPrev"
.export e_StdIOCommon_dAbovePrev
.desc e_StdIOCommon_dAbovePrev _hnf _hnf 0 0 "AbovePrev"
.export e_StdIOCommon_dBelowPrev
.desc e_StdIOCommon_dBelowPrev _hnf _hnf 0 0 "BelowPrev"
.export e_StdIOCommon_dNoOffset
.desc e_StdIOCommon_dNoOffset _hnf _hnf 0 0 "NoOffset"
.export e_StdIOCommon_dOffsetVector
.desc e_StdIOCommon_dOffsetVector _hnf _add_arg 1 0 "OffsetVector"
.export e_StdIOCommon_dOffsetAlign
.desc e_StdIOCommon_dOffsetAlign _hnf _add_arg 1 0 "OffsetAlign"
.export e_StdIOCommon_dOffsetFun
.desc e_StdIOCommon_dOffsetFun _hnf _add_arg 2 0 "OffsetFun"
.export e_StdIOCommon_dAlignLeft
.desc0 e_StdIOCommon_dAlignLeft 0 "AlignLeft"
.export e_StdIOCommon_dAlignRight
.desc0 e_StdIOCommon_dAlignRight 1 "AlignRight"
.export e_StdIOCommon_dAlignCenter
.desc0 e_StdIOCommon_dAlignCenter 2 "AlignCenter"
.export e_StdIOCommon_dAlignTop
.desc0 e_StdIOCommon_dAlignTop 3 "AlignTop"
.export e_StdIOCommon_dAlignBottom
.desc0 e_StdIOCommon_dAlignBottom 4 "AlignBottom"
.export e_StdIOCommon_dHorizontal
.desc0 e_StdIOCommon_dHorizontal 0 "Horizontal"
.export e_StdIOCommon_dVertical
.desc0 e_StdIOCommon_dVertical 1 "Vertical"
.export e_StdIOCommon_dStandardCursor
.desc0 e_StdIOCommon_dStandardCursor 0 "StandardCursor"
.export e_StdIOCommon_dBusyCursor
.desc0 e_StdIOCommon_dBusyCursor 1 "BusyCursor"
.export e_StdIOCommon_dIBeamCursor
.desc0 e_StdIOCommon_dIBeamCursor 2 "IBeamCursor"
.export e_StdIOCommon_dCrossCursor
.desc0 e_StdIOCommon_dCrossCursor 3 "CrossCursor"
.export e_StdIOCommon_dFatCrossCursor
.desc0 e_StdIOCommon_dFatCrossCursor 4 "FatCrossCursor"
.export e_StdIOCommon_dArrowCursor
.desc0 e_StdIOCommon_dArrowCursor 5 "ArrowCursor"
.export e_StdIOCommon_dHiddenCursor
.desc0 e_StdIOCommon_dHiddenCursor 6 "HiddenCursor"
.export e_StdIOCommon_dNDI
.desc0 e_StdIOCommon_dNDI 0 "NDI"
.export e_StdIOCommon_dSDI
.desc0 e_StdIOCommon_dSDI 1 "SDI"
.export e_StdIOCommon_dMDI
.desc0 e_StdIOCommon_dMDI 2 "MDI"
.export e_StdIOCommon_dProcessActivate
.desc e_StdIOCommon_dProcessActivate _hnf _add_arg 1 0 "ProcessActivate"
.export e_StdIOCommon_dProcessDeactivate
.desc e_StdIOCommon_dProcessDeactivate _hnf _add_arg 1 0 "ProcessDeactivate"
.export e_StdIOCommon_dProcessClose
.desc e_StdIOCommon_dProcessClose _hnf _add_arg 1 0 "ProcessClose"
.export e_StdIOCommon_dProcessOpenFiles
.desc e_StdIOCommon_dProcessOpenFiles _hnf _add_arg 1 0 "ProcessOpenFiles"
.export e_StdIOCommon_dProcessClipboardChanged
.desc e_StdIOCommon_dProcessClipboardChanged _hnf _add_arg 1 0 "ProcessClipboardChanged"
.export e_StdIOCommon_dProcessWindowPos
.desc e_StdIOCommon_dProcessWindowPos _hnf _add_arg 1 0 "ProcessWindowPos"
.export e_StdIOCommon_dProcessWindowSize
.desc e_StdIOCommon_dProcessWindowSize _hnf _add_arg 1 0 "ProcessWindowSize"
.export e_StdIOCommon_dProcessWindowResize
.desc e_StdIOCommon_dProcessWindowResize _hnf _add_arg 1 0 "ProcessWindowResize"
.export e_StdIOCommon_dProcessToolbar
.desc e_StdIOCommon_dProcessToolbar _hnf _add_arg 1 0 "ProcessToolbar"
.export e_StdIOCommon_dProcessNoWindowMenu
.desc e_StdIOCommon_dProcessNoWindowMenu _hnf _hnf 0 0 "ProcessNoWindowMenu"
.export e_StdIOCommon_dToolbarItem
.desc e_StdIOCommon_dToolbarItem _hnf _add_arg 3 0 "ToolbarItem"
.export e_StdIOCommon_dToolbarSeparator
.desc e_StdIOCommon_dToolbarSeparator _hnf _hnf 0 0 "ToolbarSeparator"
.export e_StdIOCommon_dSliderIncSmall
.desc e_StdIOCommon_dSliderIncSmall _hnf _hnf 0 0 "SliderIncSmall"
.export e_StdIOCommon_dSliderDecSmall
.desc e_StdIOCommon_dSliderDecSmall _hnf _hnf 0 0 "SliderDecSmall"
.export e_StdIOCommon_dSliderIncLarge
.desc e_StdIOCommon_dSliderIncLarge _hnf _hnf 0 0 "SliderIncLarge"
.export e_StdIOCommon_dSliderDecLarge
.desc e_StdIOCommon_dSliderDecLarge _hnf _hnf 0 0 "SliderDecLarge"
.export e_StdIOCommon_dSliderThumb
.desc e_StdIOCommon_dSliderThumb _hnf _add_arg 1 0 "SliderThumb"
.export e_StdIOCommon_dNoError
.desc e_StdIOCommon_dNoError _hnf _hnf 0 0 "NoError"
.export e_StdIOCommon_dErrorViolateDI
.desc e_StdIOCommon_dErrorViolateDI _hnf _hnf 0 0 "ErrorViolateDI"
.export e_StdIOCommon_dErrorIdsInUse
.desc e_StdIOCommon_dErrorIdsInUse _hnf _hnf 0 0 "ErrorIdsInUse"
.export e_StdIOCommon_dErrorUnknownObject
.desc e_StdIOCommon_dErrorUnknownObject _hnf _hnf 0 0 "ErrorUnknownObject"
.export e_StdIOCommon_dErrorNotifierOpen
.desc e_StdIOCommon_dErrorNotifierOpen _hnf _hnf 0 0 "ErrorNotifierOpen"
.export e_StdIOCommon_kOtherError
.record e_StdIOCommon_kOtherError da 1 0 "OtherError"
.export e_StdIOCommon_eaOtherError
.descexp e_StdIOCommon_dOtherError e_StdIOCommon_nOtherError e_StdIOCommon_lOtherError 1 0 "OtherError"
.o 2 0
e_StdIOCommon_lOtherError
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdIOCommon_eaOtherError
.n 1 e_StdIOCommon_dOtherError e_StdIOCommon_eaOtherError
.o 1 0
e_StdIOCommon_nOtherError
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_eaOtherError
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	fill_r e_StdIOCommon_kOtherError 1 0 1 0 0
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_stoString;43
.descexp e_StdIOCommon_dtoString;43 e_StdIOCommon_ntoString;43 e_StdIOCommon_ltoString;43 1 0 "toString;43"
.o 2 0
e_StdIOCommon_ltoString;43
	pop_a 1
.d 1 0
	jsr ea44
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;43
.o 1 0
e_StdIOCommon_ntoString;43
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea44
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea44
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;43
.o 1 0
s44
	pushD_a 0
	eqD_b e_StdIOCommon_dNoError 0
	jmp_true case.1
	eqD_b e_StdIOCommon_dErrorViolateDI 0
	jmp_true case.2
	eqD_b e_StdIOCommon_dErrorIdsInUse 0
	jmp_true case.3
	eqD_b e_StdIOCommon_dErrorUnknownObject 0
	jmp_true case.4
	eqD_b e_StdIOCommon_dErrorNotifierOpen 0
	jmp_true case.5
	jmp case.6
case.1
	pop_b 1
	pop_a 1
	buildAC "NoError"
.d 1 0
	rtn
case.2
	pop_b 1
	pop_a 1
	buildAC "ErrorViolateDI"
.d 1 0
	rtn
case.3
	pop_b 1
	pop_a 1
	buildAC "ErrorIdsInUse"
.d 1 0
	rtn
case.4
	pop_b 1
	pop_a 1
	buildAC "ErrorUnknownObject"
.d 1 0
	rtn
case.5
	pop_b 1
	pop_a 1
	buildAC "ErrorNotifierOpen"
.d 1 0
	rtn
case.6
	pop_b 1
	repl_args 1 1
	push_a 0
	no_op
	buildAC "OtherError "
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
.export e_StdIOCommon_s==;42
.descexp e_StdIOCommon_d==;42 e_StdIOCommon_n==;42 e_StdIOCommon_l==;42 2 0 "==;42"
.a 0 a43
.o 2 0
e_StdIOCommon_l==;42
	repl_args 1 1
.o 2 0
a43
.d 2 0
	jsr ea43
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;42
.o 1 0
e_StdIOCommon_n==;42
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea43
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea43
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;42
.o 2 0
s43
	pushD_a 0
	eqD_b e_StdIOCommon_dNoError 0
	jmp_true case.7
	eqD_b e_StdIOCommon_dErrorViolateDI 0
	jmp_true case.8
	eqD_b e_StdIOCommon_dErrorIdsInUse 0
	jmp_true case.9
	eqD_b e_StdIOCommon_dErrorUnknownObject 0
	jmp_true case.10
	eqD_b e_StdIOCommon_dErrorNotifierOpen 0
	jmp_true case.11
	jmp case.12
case.7
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s105
case.8
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s106
case.9
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s107
case.10
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s108
case.11
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s109
case.12
	pop_b 1
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s110
.o 2 0
s110
	eq_desc e_StdIOCommon_kOtherError 0 0
	jmp_true case.13
	jmp case.14
case.13
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr eqAC
.o 0 1 b	
.d 0 1 b
	rtn
case.14
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s109
	eq_desc e_StdIOCommon_dErrorNotifierOpen 0 0
	jmp_true case.15
	jmp case.16
case.15
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.16
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s108
	eq_desc e_StdIOCommon_dErrorUnknownObject 0 0
	jmp_true case.17
	jmp case.18
case.17
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.18
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s107
	eq_desc e_StdIOCommon_dErrorIdsInUse 0 0
	jmp_true case.19
	jmp case.20
case.19
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.20
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s106
	eq_desc e_StdIOCommon_dErrorViolateDI 0 0
	jmp_true case.21
	jmp case.22
case.21
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.22
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s105
	eq_desc e_StdIOCommon_dNoError 0 0
	jmp_true case.23
	jmp case.24
case.23
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.24
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_stoString;41
.descexp e_StdIOCommon_dtoString;41 e_StdIOCommon_ntoString;41 e_StdIOCommon_ltoString;41 1 0 "toString;41"
.o 2 0
e_StdIOCommon_ltoString;41
	pop_a 1
.d 1 0
	jsr ea42
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;41
.o 1 0
e_StdIOCommon_ntoString;41
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea42
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea42
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;41
.o 1 0
s42
	pushD_a 0
	eqD_b e_StdIOCommon_dSliderIncSmall 0
	jmp_true case.25
	eqD_b e_StdIOCommon_dSliderDecSmall 0
	jmp_true case.26
	eqD_b e_StdIOCommon_dSliderIncLarge 0
	jmp_true case.27
	eqD_b e_StdIOCommon_dSliderDecLarge 0
	jmp_true case.28
	jmp case.29
case.25
	pop_b 1
	pop_a 1
	buildAC "SliderIncSmall"
.d 1 0
	rtn
case.26
	pop_b 1
	pop_a 1
	buildAC "SliderDecSmall"
.d 1 0
	rtn
case.27
	pop_b 1
	pop_a 1
	buildAC "SliderIncLarge"
.d 1 0
	rtn
case.28
	pop_b 1
	pop_a 1
	buildAC "SliderDecLarge"
.d 1 0
	rtn
case.29
	pop_b 1
	repl_args 1 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "SliderThumb "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
.export e_StdIOCommon_stoString;40
.descexp e_StdIOCommon_dtoString;40 e_StdIOCommon_ntoString;40 e_StdIOCommon_ltoString;40 1 0 "toString;40"
.o 2 0
e_StdIOCommon_ltoString;40
	pop_a 1
.d 1 0
	jsr ea41
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;40
.o 1 0
e_StdIOCommon_ntoString;40
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea41
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea41
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;40
.o 1 0
s41
	pushD_a 0
	eqD_b e_StdIOCommon_dNDI 0
	jmp_true case.30
	eqD_b e_StdIOCommon_dSDI 0
	jmp_true case.31
	jmp case.32
case.30
	pop_b 1
	pop_a 1
	buildAC "NDI"
.d 1 0
	rtn
case.31
	pop_b 1
	pop_a 1
	buildAC "SDI"
.d 1 0
	rtn
case.32
	pop_b 1
	pop_a 1
	buildAC "MDI"
.d 1 0
	rtn
.export e_StdIOCommon_s==;39
.descexp e_StdIOCommon_d==;39 e_StdIOCommon_n==;39 e_StdIOCommon_l==;39 2 0 "==;39"
.a 0 a40
.o 2 0
e_StdIOCommon_l==;39
	repl_args 1 1
.o 2 0
a40
.d 2 0
	jsr ea40
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;39
.o 1 0
e_StdIOCommon_n==;39
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea40
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea40
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;39
.o 2 0
s40
	pushD_a 0
	eqD_b e_StdIOCommon_dNDI 0
	jmp_true case.33
	eqD_b e_StdIOCommon_dSDI 0
	jmp_true case.34
	jmp case.35
case.33
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s102
case.34
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s103
case.35
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s104
.o 1 0
s104
	eq_desc e_StdIOCommon_dMDI 0 0
	jmp_true case.36
	jmp case.37
case.36
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.37
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s103
	eq_desc e_StdIOCommon_dSDI 0 0
	jmp_true case.38
	jmp case.39
case.38
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.39
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s102
	eq_desc e_StdIOCommon_dNDI 0 0
	jmp_true case.40
	jmp case.41
case.40
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.41
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_stoString;38
.descexp e_StdIOCommon_dtoString;38 e_StdIOCommon_ntoString;38 e_StdIOCommon_ltoString;38 1 0 "toString;38"
.o 2 0
e_StdIOCommon_ltoString;38
	pop_a 1
.d 1 0
	jsr ea39
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;38
.o 1 0
e_StdIOCommon_ntoString;38
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea39
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea39
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;38
.o 1 0
s39
	pushD_a 0
	eqD_b e_StdIOCommon_dStandardCursor 0
	jmp_true case.42
	eqD_b e_StdIOCommon_dBusyCursor 0
	jmp_true case.43
	eqD_b e_StdIOCommon_dIBeamCursor 0
	jmp_true case.44
	eqD_b e_StdIOCommon_dCrossCursor 0
	jmp_true case.45
	eqD_b e_StdIOCommon_dFatCrossCursor 0
	jmp_true case.46
	eqD_b e_StdIOCommon_dArrowCursor 0
	jmp_true case.47
	jmp case.48
case.42
	pop_b 1
	pop_a 1
	buildAC "StandardCursor"
.d 1 0
	rtn
case.43
	pop_b 1
	pop_a 1
	buildAC "BusyCursor"
.d 1 0
	rtn
case.44
	pop_b 1
	pop_a 1
	buildAC "IBeamCursor"
.d 1 0
	rtn
case.45
	pop_b 1
	pop_a 1
	buildAC "CrossCursor"
.d 1 0
	rtn
case.46
	pop_b 1
	pop_a 1
	buildAC "FatCrossCursor"
.d 1 0
	rtn
case.47
	pop_b 1
	pop_a 1
	buildAC "ArrowCursor"
.d 1 0
	rtn
case.48
	pop_b 1
	pop_a 1
	buildAC "HiddenCursor"
.d 1 0
	rtn
.export e_StdIOCommon_s==;37
.descexp e_StdIOCommon_d==;37 e_StdIOCommon_n==;37 e_StdIOCommon_l==;37 2 0 "==;37"
.a 0 a38
.o 2 0
e_StdIOCommon_l==;37
	repl_args 1 1
.o 2 0
a38
.d 2 0
	jsr ea38
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;37
.o 1 0
e_StdIOCommon_n==;37
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea38
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea38
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;37
.o 2 0
s38
	pushD_a 0
	eqD_b e_StdIOCommon_dStandardCursor 0
	jmp_true case.49
	eqD_b e_StdIOCommon_dBusyCursor 0
	jmp_true case.50
	eqD_b e_StdIOCommon_dIBeamCursor 0
	jmp_true case.51
	eqD_b e_StdIOCommon_dCrossCursor 0
	jmp_true case.52
	eqD_b e_StdIOCommon_dFatCrossCursor 0
	jmp_true case.53
	eqD_b e_StdIOCommon_dArrowCursor 0
	jmp_true case.54
	jmp case.55
case.49
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s95
case.50
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s96
case.51
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s97
case.52
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s98
case.53
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s99
case.54
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s100
case.55
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s101
.o 1 0
s101
	eq_desc e_StdIOCommon_dHiddenCursor 0 0
	jmp_true case.56
	jmp case.57
case.56
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.57
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s100
	eq_desc e_StdIOCommon_dArrowCursor 0 0
	jmp_true case.58
	jmp case.59
case.58
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.59
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s99
	eq_desc e_StdIOCommon_dFatCrossCursor 0 0
	jmp_true case.60
	jmp case.61
case.60
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.61
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s98
	eq_desc e_StdIOCommon_dCrossCursor 0 0
	jmp_true case.62
	jmp case.63
case.62
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.63
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s97
	eq_desc e_StdIOCommon_dIBeamCursor 0 0
	jmp_true case.64
	jmp case.65
case.64
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.65
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s96
	eq_desc e_StdIOCommon_dBusyCursor 0 0
	jmp_true case.66
	jmp case.67
case.66
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.67
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s95
	eq_desc e_StdIOCommon_dStandardCursor 0 0
	jmp_true case.68
	jmp case.69
case.68
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.69
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_stoString;36
.descexp e_StdIOCommon_dtoString;36 e_StdIOCommon_ntoString;36 e_StdIOCommon_ltoString;36 1 0 "toString;36"
.o 2 0
e_StdIOCommon_ltoString;36
	pop_a 1
.d 1 0
	jsr ea37
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;36
.o 1 0
e_StdIOCommon_ntoString;36
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea37
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea37
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;36
.o 1 0
s37
	eq_desc e_StdIOCommon_dHorizontal 0 0
	jmp_true case.70
	jmp case.71
case.70
	pop_a 1
	buildAC "Horizontal"
.d 1 0
	rtn
case.71
	pop_a 1
	buildAC "Vertical"
.d 1 0
	rtn
.export e_StdIOCommon_stoString;34
.descexp e_StdIOCommon_dtoString;34 e_StdIOCommon_ntoString;34 e_StdIOCommon_ltoString;34 1 0 "toString;34"
.o 2 0
e_StdIOCommon_ltoString;34
	pop_a 1
.d 1 0
	jsr ea35
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;34
.o 1 0
e_StdIOCommon_ntoString;34
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea35
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea35
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;34
.o 1 0
s35
	pushD_a 0
	eqD_b e_StdIOCommon_dFix 0
	jmp_true case.72
	eqD_b e_StdIOCommon_dLeftTop 0
	jmp_true case.73
	eqD_b e_StdIOCommon_dRightTop 0
	jmp_true case.74
	eqD_b e_StdIOCommon_dLeftBottom 0
	jmp_true case.75
	eqD_b e_StdIOCommon_dRightBottom 0
	jmp_true case.76
	eqD_b e_StdIOCommon_dLeft 0
	jmp_true case.77
	eqD_b e_StdIOCommon_dCenter 0
	jmp_true case.78
	eqD_b e_StdIOCommon_dRight 0
	jmp_true case.79
	eqD_b e_StdIOCommon_dLeftOf 1
	jmp_true case.80
	eqD_b e_StdIOCommon_dRightTo 1
	jmp_true case.81
	eqD_b e_StdIOCommon_dAbove 1
	jmp_true case.82
	eqD_b e_StdIOCommon_dBelow 1
	jmp_true case.83
	eqD_b e_StdIOCommon_dLeftOfPrev 0
	jmp_true case.84
	eqD_b e_StdIOCommon_dRightToPrev 0
	jmp_true case.85
	eqD_b e_StdIOCommon_dAbovePrev 0
	jmp_true case.86
	jmp case.87
case.72
	pop_b 1
	pop_a 1
	buildAC "Fix"
.d 1 0
	rtn
case.73
	pop_b 1
	pop_a 1
	buildAC "LeftTop"
.d 1 0
	rtn
case.74
	pop_b 1
	pop_a 1
	buildAC "RightTop"
.d 1 0
	rtn
case.75
	pop_b 1
	pop_a 1
	buildAC "LeftBottom"
.d 1 0
	rtn
case.76
	pop_b 1
	pop_a 1
	buildAC "RightBottom"
.d 1 0
	rtn
case.77
	pop_b 1
	pop_a 1
	buildAC "Left"
.d 1 0
	rtn
case.78
	pop_b 1
	pop_a 1
	buildAC "Center"
.d 1 0
	rtn
case.79
	pop_b 1
	pop_a 1
	buildAC "Right"
.d 1 0
	rtn
case.80
	pop_b 1
	repl_args 1 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 1
.d 1 0
	jsr e_id_stoString;30
.o 1 0
	buildAC "LeftOf "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.81
	pop_b 1
	repl_args 1 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 1
.d 1 0
	jsr e_id_stoString;30
.o 1 0
	buildAC "RightTo "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.82
	pop_b 1
	repl_args 1 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 1
.d 1 0
	jsr e_id_stoString;30
.o 1 0
	buildAC "Above "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.83
	pop_b 1
	repl_args 1 1
	push_a 0
	jsr_eval 0
	updatepop_a 0 1
.d 1 0
	jsr e_id_stoString;30
.o 1 0
	buildAC "Below "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.84
	pop_b 1
	pop_a 1
	buildAC "LeftOfPrev"
.d 1 0
	rtn
case.85
	pop_b 1
	pop_a 1
	buildAC "RightToPrev"
.d 1 0
	rtn
case.86
	pop_b 1
	pop_a 1
	buildAC "AbovePrev"
.d 1 0
	rtn
case.87
	pop_b 1
	pop_a 1
	buildAC "BelowPrev"
.d 1 0
	rtn
.export e_StdIOCommon_s==;33
.descexp e_StdIOCommon_d==;33 e_StdIOCommon_n==;33 e_StdIOCommon_l==;33 2 0 "==;33"
.a 0 a34
.o 2 0
e_StdIOCommon_l==;33
	repl_args 1 1
.o 2 0
a34
.d 2 0
	jsr ea34
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;33
.o 1 0
e_StdIOCommon_n==;33
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea34
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea34
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;33
.o 2 0
s34
	pushD_a 0
	eqD_b e_StdIOCommon_dFix 0
	jmp_true case.88
	eqD_b e_StdIOCommon_dLeftTop 0
	jmp_true case.89
	eqD_b e_StdIOCommon_dRightTop 0
	jmp_true case.90
	eqD_b e_StdIOCommon_dLeftBottom 0
	jmp_true case.91
	eqD_b e_StdIOCommon_dRightBottom 0
	jmp_true case.92
	eqD_b e_StdIOCommon_dLeft 0
	jmp_true case.93
	eqD_b e_StdIOCommon_dCenter 0
	jmp_true case.94
	eqD_b e_StdIOCommon_dRight 0
	jmp_true case.95
	eqD_b e_StdIOCommon_dLeftOf 1
	jmp_true case.96
	eqD_b e_StdIOCommon_dRightTo 1
	jmp_true case.97
	eqD_b e_StdIOCommon_dAbove 1
	jmp_true case.98
	eqD_b e_StdIOCommon_dBelow 1
	jmp_true case.99
	eqD_b e_StdIOCommon_dLeftOfPrev 0
	jmp_true case.100
	eqD_b e_StdIOCommon_dRightToPrev 0
	jmp_true case.101
	eqD_b e_StdIOCommon_dAbovePrev 0
	jmp_true case.102
	jmp case.103
case.88
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s79
case.89
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s80
case.90
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s81
case.91
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s82
case.92
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s83
case.93
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s84
case.94
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s85
case.95
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s86
case.96
	pop_b 1
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s87
case.97
	pop_b 1
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s88
case.98
	pop_b 1
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s89
case.99
	pop_b 1
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s90
case.100
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s91
case.101
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s92
case.102
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s93
case.103
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s94
.o 1 0
s94
	eq_desc e_StdIOCommon_dBelowPrev 0 0
	jmp_true case.104
	jmp case.105
case.104
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.105
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s93
	eq_desc e_StdIOCommon_dAbovePrev 0 0
	jmp_true case.106
	jmp case.107
case.106
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.107
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s92
	eq_desc e_StdIOCommon_dRightToPrev 0 0
	jmp_true case.108
	jmp case.109
case.108
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.109
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s91
	eq_desc e_StdIOCommon_dLeftOfPrev 0 0
	jmp_true case.110
	jmp case.111
case.110
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.111
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 2 0
s90
	eq_desc e_StdIOCommon_dBelow 1 0
	jmp_true case.112
	jmp case.113
case.112
	repl_args 1 1
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp e_id_s==;27
case.113
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 2 0
s89
	eq_desc e_StdIOCommon_dAbove 1 0
	jmp_true case.114
	jmp case.115
case.114
	repl_args 1 1
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp e_id_s==;27
case.115
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 2 0
s88
	eq_desc e_StdIOCommon_dRightTo 1 0
	jmp_true case.116
	jmp case.117
case.116
	repl_args 1 1
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp e_id_s==;27
case.117
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 2 0
s87
	eq_desc e_StdIOCommon_dLeftOf 1 0
	jmp_true case.118
	jmp case.119
case.118
	repl_args 1 1
	push_a 0
	jsr_eval 0
	push_a 2
	jsr_eval 0
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp e_id_s==;27
case.119
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s86
	eq_desc e_StdIOCommon_dRight 0 0
	jmp_true case.120
	jmp case.121
case.120
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.121
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s85
	eq_desc e_StdIOCommon_dCenter 0 0
	jmp_true case.122
	jmp case.123
case.122
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.123
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s84
	eq_desc e_StdIOCommon_dLeft 0 0
	jmp_true case.124
	jmp case.125
case.124
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.125
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s83
	eq_desc e_StdIOCommon_dRightBottom 0 0
	jmp_true case.126
	jmp case.127
case.126
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.127
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s82
	eq_desc e_StdIOCommon_dLeftBottom 0 0
	jmp_true case.128
	jmp case.129
case.128
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.129
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s81
	eq_desc e_StdIOCommon_dRightTop 0 0
	jmp_true case.130
	jmp case.131
case.130
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.131
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s80
	eq_desc e_StdIOCommon_dLeftTop 0 0
	jmp_true case.132
	jmp case.133
case.132
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.133
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s79
	eq_desc e_StdIOCommon_dFix 0 0
	jmp_true case.134
	jmp case.135
case.134
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.135
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_szero;32
.export e_StdIOCommon_eazero;32
.descexp e_StdIOCommon_dzero;32 e_StdIOCommon_nzero;32 e_StdIOCommon_lzero;32 0 0 "zero;32"
.o 1 0
e_StdIOCommon_lzero;32
	halt
.n 0 e_StdIOCommon_dzero;32 e_StdIOCommon_eazero;32
.o 1 0
e_StdIOCommon_nzero;32
	push_node _cycle_in_spine 0
.o 1 0
e_StdIOCommon_eazero;32
.o 1 0
e_StdIOCommon_szero;32
.o 1 0
s33
	fillh e_StdIOCommon_dNoOffset 0 0
.d 1 0
	rtn
.export e_StdIOCommon_stoString;29
.descexp e_StdIOCommon_dtoString;29 e_StdIOCommon_ntoString;29 e_StdIOCommon_ltoString;29 1 0 "toString;29"
.o 2 0
e_StdIOCommon_ltoString;29
	pop_a 1
.d 1 0
	jsr ea30
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;29
.o 1 0
e_StdIOCommon_ntoString;29
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea30
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea30
	jsr_eval 0
	repl_r_args 3 0
.o 3 0
e_StdIOCommon_stoString;29
.o 3 0
s30
	buildh _Nil 0
	buildh e_StdIOBasic_dtoString;27 0
	push_a 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build e_StdList_dmap 2 e_StdList_nmap
	build _ 1 n228
	buildh _Cons 2
	push_a 2
	build _ 1 n227
	buildh _Cons 2
	push_a 1
	build _ 1 n226
	buildh _Cons 2
	buildAC ","
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr s49
.o 1 0
.d 1 0
	jmp s45
.n 1 _ ea228
.o 1 0
n228
	push_node _cycle_in_spine 1
.o 2 0
ea228
.o 2 0
s228
	push_a 0
	jsr_eval 0
	buildAC ","
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr s49
.o 1 0
.d 1 0
	jsr s47
.o 1 0
	buildAC "updArea="
.d 2 0
	jsr catAC
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.n 1 _ ea227
.o 1 0
n227
	push_node _cycle_in_spine 1
.o 2 0
ea227
.o 2 0
s227
	push_r_args 0 2 0
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_StdIOBasic_stoString;27
.o 1 0
	buildAC "newFrame="
.d 2 0
	jsr catAC
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.n 1 _ ea226
.o 1 0
n226
	push_node _cycle_in_spine 1
.o 2 0
ea226
.o 2 0
s226
	push_r_args 0 2 0
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_StdIOBasic_stoString;27
.o 1 0
	buildAC "oldFrame="
.d 2 0
	jsr catAC
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_stoString;28
.descexp e_StdIOCommon_dtoString;28 e_StdIOCommon_ntoString;28 e_StdIOCommon_ltoString;28 1 0 "toString;28"
.o 2 0
e_StdIOCommon_ltoString;28
	pop_a 1
.d 1 0
	jsr ea29
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;28
.o 1 0
e_StdIOCommon_ntoString;28
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea29
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea29
	jsr_eval 0
	repl_r_args 0 3
.o 0 3 iii
e_StdIOCommon_stoString;28
.o 0 3 iii
s29
	buildh _Nil 0
	buildI_b 1
	buildh _Cons 2
	buildI_b 2
	buildh _Cons 2
	buildI_b 0
	buildh _Cons 2
	buildh _Nil 0
	buildAC "sliderMax"
	buildh ARRAY 1
	buildh _Cons 2
	buildAC "sliderThumb"
	buildh ARRAY 1
	buildh _Cons 2
	buildAC "sliderMin"
	buildh ARRAY 1
	buildh _Cons 2
	create
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	pop_b 3
.d 3 0
	jsr e_StdList_szip2
.o 1 0
	buildh d52 0
	create
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
.d 3 0
	jsr e_StdList_smap
.o 1 0
	buildAC ","
.d 2 0
	jsr s49
.o 1 0
.d 1 0
	jmp s45
.desc d52 _hnf l52 1 0 "recordFieldtoString;57"
.o 2 0
l52
	pop_a 1
.d 1 0
	jsr ea52
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.o 1 0
ea52
	jsr_eval 0
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	push_array 0
	update_a 0 2
	pop_a 2
.o 1 1 i
s52
	push_b 0
	updatepop_b 0 1
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "="
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
.export e_StdIOCommon_s==;27
.descexp e_StdIOCommon_d==;27 e_StdIOCommon_n==;27 e_StdIOCommon_l==;27 2 0 "==;27"
.a 0 a28
.o 2 0
e_StdIOCommon_l==;27
	repl_args 1 1
.o 2 0
a28
.d 2 0
	jsr ea28
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;27
.o 1 0
e_StdIOCommon_n==;27
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea28
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea28
	jsr_eval 1
	jsr_eval 0
	push_r_args 1 0 3
	repl_r_args 0 3
	pop_a 1
.o 0 6 iiiiii
e_StdIOCommon_s==;27
.o 0 6 iiiiii
s28
	push_b 3
	push_b 1
	eqI
	jmp_false else.136
	push_b 4
	push_b 2
	eqI
	jmp_false else.137
	push_b 5
	push_b 3
	update_b 1 7
	updatepop_b 0 6
	eqI
.d 0 1 b
	rtn
else.137
	pop_b 6
	pushB FALSE
.d 0 1 b
	rtn
else.136
	pop_b 6
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_stoString;26
.descexp e_StdIOCommon_dtoString;26 e_StdIOCommon_ntoString;26 e_StdIOCommon_ltoString;26 1 0 "toString;26"
.o 2 0
e_StdIOCommon_ltoString;26
	pop_a 1
.d 1 0
	jsr ea27
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;26
.o 1 0
e_StdIOCommon_ntoString;26
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea27
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea27
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;26
.o 1 0
s27
	pushD_a 0
	eqD_b e_StdIOCommon_dButtonStillUp 0
	jmp_true case.138
	eqD_b e_StdIOCommon_dButtonDown 0
	jmp_true case.139
	eqD_b e_StdIOCommon_dButtonDoubleDown 0
	jmp_true case.140
	eqD_b e_StdIOCommon_dButtonTripleDown 0
	jmp_true case.141
	eqD_b e_StdIOCommon_dButtonStillDown 0
	jmp_true case.142
	jmp case.143
case.138
	pop_b 1
	pop_a 1
	buildAC "ButtonStillUp"
.d 1 0
	rtn
case.139
	pop_b 1
	pop_a 1
	buildAC "ButtonDown"
.d 1 0
	rtn
case.140
	pop_b 1
	pop_a 1
	buildAC "ButtonDoubleDown"
.d 1 0
	rtn
case.141
	pop_b 1
	pop_a 1
	buildAC "ButtonTripleDown"
.d 1 0
	rtn
case.142
	pop_b 1
	pop_a 1
	buildAC "ButtonStillDown"
.d 1 0
	rtn
case.143
	pop_b 1
	pop_a 1
	buildAC "ButtonUp"
.d 1 0
	rtn
.export e_StdIOCommon_stoString;25
.descexp e_StdIOCommon_dtoString;25 e_StdIOCommon_ntoString;25 e_StdIOCommon_ltoString;25 1 0 "toString;25"
.o 2 0
e_StdIOCommon_ltoString;25
	pop_a 1
.d 1 0
	jsr ea26
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;25
.o 1 0
e_StdIOCommon_ntoString;25
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea26
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea26
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;25
.o 1 0
s26
	pushD_a 0
	eqD_b e_StdIOCommon_dMouseMove 2
	jmp_true case.144
	eqD_b e_StdIOCommon_dMouseDown 3
	jmp_true case.145
	eqD_b e_StdIOCommon_dMouseDrag 2
	jmp_true case.146
	eqD_b e_StdIOCommon_dMouseUp 2
	jmp_true case.147
	jmp case.148
case.144
	pop_b 1
	repl_args 2 2
	buildh _Nil 0
	push_a 2
	build e_StdIOCommon_dtoString;31 1 e_StdIOCommon_ntoString;31
	buildh _Cons 2
	push_a 1
	build e_StdIOBasic_dtoString;24 1 e_StdIOBasic_ntoString;24
	buildh _Cons 2
	buildAC " "
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr s49
.o 1 0
	buildAC "MouseMove "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.145
	pop_b 1
	repl_args 3 3
	buildh _Nil 0
	push_a 3
	build _ 1 e_StdString_ntoString;5
	buildh _Cons 2
	push_a 2
	build e_StdIOCommon_dtoString;31 1 e_StdIOCommon_ntoString;31
	buildh _Cons 2
	push_a 1
	build e_StdIOBasic_dtoString;24 1 e_StdIOBasic_ntoString;24
	buildh _Cons 2
	buildAC " "
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr s49
.o 1 0
	buildAC "MouseDown "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.146
	pop_b 1
	repl_args 2 2
	buildh _Nil 0
	push_a 2
	build e_StdIOCommon_dtoString;31 1 e_StdIOCommon_ntoString;31
	buildh _Cons 2
	push_a 1
	build e_StdIOBasic_dtoString;24 1 e_StdIOBasic_ntoString;24
	buildh _Cons 2
	buildAC " "
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr s49
.o 1 0
	buildAC "MouseDrag "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.147
	pop_b 1
	repl_args 2 2
	buildh _Nil 0
	push_a 2
	build e_StdIOCommon_dtoString;31 1 e_StdIOCommon_ntoString;31
	buildh _Cons 2
	push_a 1
	build e_StdIOBasic_dtoString;24 1 e_StdIOBasic_ntoString;24
	buildh _Cons 2
	buildAC " "
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr s49
.o 1 0
	buildAC "MouseUp "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.148
	pop_b 1
	pop_a 1
	buildAC "MouseLost"
.d 1 0
	rtn
.export e_StdIOCommon_s==;24
.descexp e_StdIOCommon_d==;24 e_StdIOCommon_n==;24 e_StdIOCommon_l==;24 2 0 "==;24"
.a 0 a25
.o 2 0
e_StdIOCommon_l==;24
	repl_args 1 1
.o 2 0
a25
.d 2 0
	jsr ea25
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;24
.o 1 0
e_StdIOCommon_n==;24
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea25
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea25
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;24
.o 2 0
s25
	pushD_a 0
	eqD_b e_StdIOCommon_dButtonStillUp 0
	jmp_true case.149
	eqD_b e_StdIOCommon_dButtonDown 0
	jmp_true case.150
	eqD_b e_StdIOCommon_dButtonDoubleDown 0
	jmp_true case.151
	eqD_b e_StdIOCommon_dButtonTripleDown 0
	jmp_true case.152
	eqD_b e_StdIOCommon_dButtonStillDown 0
	jmp_true case.153
	jmp case.154
case.149
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s73
case.150
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s74
case.151
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s75
case.152
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s76
case.153
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s77
case.154
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s78
.o 1 0
s78
	eq_desc e_StdIOCommon_dButtonUp 0 0
	jmp_true case.155
	jmp case.156
case.155
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.156
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s77
	eq_desc e_StdIOCommon_dButtonStillDown 0 0
	jmp_true case.157
	jmp case.158
case.157
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.158
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s76
	eq_desc e_StdIOCommon_dButtonTripleDown 0 0
	jmp_true case.159
	jmp case.160
case.159
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.160
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s75
	eq_desc e_StdIOCommon_dButtonDoubleDown 0 0
	jmp_true case.161
	jmp case.162
case.161
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.162
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s74
	eq_desc e_StdIOCommon_dButtonDown 0 0
	jmp_true case.163
	jmp case.164
case.163
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.164
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s73
	eq_desc e_StdIOCommon_dButtonStillUp 0 0
	jmp_true case.165
	jmp case.166
case.165
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.166
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_s==;23
.descexp e_StdIOCommon_d==;23 e_StdIOCommon_n==;23 e_StdIOCommon_l==;23 2 0 "==;23"
.a 0 a24
.o 2 0
e_StdIOCommon_l==;23
	repl_args 1 1
.o 2 0
a24
.d 2 0
	jsr ea24
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;23
.o 1 0
e_StdIOCommon_n==;23
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea24
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea24
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;23
.o 2 0
s24
	pushD_a 0
	eqD_b e_StdIOCommon_dMouseMove 2
	jmp_true case.167
	eqD_b e_StdIOCommon_dMouseDown 3
	jmp_true case.168
	eqD_b e_StdIOCommon_dMouseDrag 2
	jmp_true case.169
	eqD_b e_StdIOCommon_dMouseUp 2
	jmp_true case.170
	jmp case.171
case.167
	pop_b 1
	repl_args 2 2
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s68
case.168
	pop_b 1
	repl_args 3 3
	push_a 2
	push_a 2
	push_a 2
	push_a 6
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 4 0
	jmp s69
case.169
	pop_b 1
	repl_args 2 2
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s70
case.170
	pop_b 1
	repl_args 2 2
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s71
case.171
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s72
.o 1 0
s72
	eq_desc e_StdIOCommon_dMouseLost 0 0
	jmp_true case.172
	jmp case.173
case.172
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.173
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 3 0
s71
	eq_desc e_StdIOCommon_dMouseUp 2 0
	jmp_true case.174
	jmp case.175
case.174
	repl_args 2 2
	push_a 0
	jsr_eval 0
	repl_r_args 0 2
	push_a 2
	jsr_eval 0
	repl_r_args 0 2
	update_a 1 2
	pop_a 2
.d 0 4 iiii
	jsr e_StdIOBasic_s==;18
.o 0 1 b
	jmp_false else.176
	push_a 0
	jsr_eval 0
	repl_r_args 0 5
	push_a 1
	jsr_eval 0
	repl_r_args 0 5
	pop_a 2
.d 0 10 bbbbbbbbbb
	jmp s31
else.176
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
case.175
	pop_a 3
	pushB FALSE
.d 0 1 b
	rtn
.o 3 0
s70
	eq_desc e_StdIOCommon_dMouseDrag 2 0
	jmp_true case.177
	jmp case.178
case.177
	repl_args 2 2
	push_a 0
	jsr_eval 0
	repl_r_args 0 2
	push_a 2
	jsr_eval 0
	repl_r_args 0 2
	update_a 1 2
	pop_a 2
.d 0 4 iiii
	jsr e_StdIOBasic_s==;18
.o 0 1 b
	jmp_false else.179
	push_a 0
	jsr_eval 0
	repl_r_args 0 5
	push_a 1
	jsr_eval 0
	repl_r_args 0 5
	pop_a 2
.d 0 10 bbbbbbbbbb
	jmp s31
else.179
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
case.178
	pop_a 3
	pushB FALSE
.d 0 1 b
	rtn
.o 4 0
s69
	eq_desc e_StdIOCommon_dMouseDown 3 0
	jmp_true case.180
	jmp case.181
case.180
	repl_args 3 3
	push_a 0
	jsr_eval 0
	repl_r_args 0 2
	push_a 3
	jsr_eval 0
	repl_r_args 0 2
	pop_a 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 0 4 iiii
	jsr e_StdIOBasic_s==;18
.o 0 1 b
	jmp_false else.182
	push_a 0
	jsr_eval 0
	repl_r_args 0 5
	push_a 3
	jsr_eval 0
	repl_r_args 0 5
	update_a 1 3
	pop_a 3
.d 0 10 bbbbbbbbbb
	jsr s31
.o 0 1 b
	jmp_false else.183
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
	pop_a 2
	eqI
.d 0 1 b
	rtn
else.183
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
else.182
	pop_a 5
	pushB FALSE
.d 0 1 b
	rtn
case.181
	pop_a 4
	pushB FALSE
.d 0 1 b
	rtn
.o 3 0
s68
	eq_desc e_StdIOCommon_dMouseMove 2 0
	jmp_true case.184
	jmp case.185
case.184
	repl_args 2 2
	push_a 0
	jsr_eval 0
	repl_r_args 0 2
	push_a 2
	jsr_eval 0
	repl_r_args 0 2
	update_a 1 2
	pop_a 2
.d 0 4 iiii
	jsr e_StdIOBasic_s==;18
.o 0 1 b
	jmp_false else.186
	push_a 0
	jsr_eval 0
	repl_r_args 0 5
	push_a 1
	jsr_eval 0
	repl_r_args 0 5
	pop_a 2
.d 0 10 bbbbbbbbbb
	jmp s31
else.186
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
case.185
	pop_a 3
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_stoString;21
.descexp e_StdIOCommon_dtoString;21 e_StdIOCommon_ntoString;21 e_StdIOCommon_ltoString;21 1 0 "toString;21"
.o 2 0
e_StdIOCommon_ltoString;21
	pop_a 1
.d 1 0
	jsr ea22
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;21
.o 1 0
e_StdIOCommon_ntoString;21
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea22
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea22
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;21
.o 1 0
s22
	pushD_a 0
	eqD_b e_StdIOCommon_dCharKey 2
	jmp_true case.187
	eqD_b e_StdIOCommon_dSpecialKey 3
	jmp_true case.188
	jmp case.189
case.187
	pop_b 1
	repl_args 2 2
	push_a 1
	jsr_eval 0
	update_a 1 2
	updatepop_a 0 1
.d 1 0
	jsr s23
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	jsr_eval 0
	pushC_a 2
	pop_a 1
	CtoI
.d 0 1 i
	jsr ItoAC
.o 1 0
	buildAC "ASCII: "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jsr s46
.o 1 0
.d 2 0
	jsr catAC
.o 1 0
	buildAC " "
.d 2 0
	jsr catAC
.o 1 0
	pushC_a 1
	CtoAC
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "CharKey "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.188
	pop_b 1
	repl_args 3 3
	buildh _Nil 0
	push_a 3
	build e_StdIOCommon_dtoString;31 1 e_StdIOCommon_ntoString;31
	buildh _Cons 2
	push_a 2
	build e_StdIOCommon_dtoString;22 1 e_StdIOCommon_ntoString;22
	buildh _Cons 2
	push_a 1
	build e_oskey_dtoString;33 1 e_oskey_ntoString;33
	buildh _Cons 2
	buildAC " "
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr s49
.o 1 0
	buildAC "SpecialKey "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.189
	pop_b 1
	pop_a 1
	buildAC "KeyLost"
.d 1 0
	rtn
.export e_StdIOCommon_stoString;31
.descexp e_StdIOCommon_dtoString;31 e_StdIOCommon_ntoString;31 e_StdIOCommon_ltoString;31 1 0 "toString;31"
.o 2 0
e_StdIOCommon_ltoString;31
	pop_a 1
.d 1 0
	jsr ea32
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;31
.o 1 0
e_StdIOCommon_ntoString;31
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea32
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea32
	jsr_eval 0
	repl_r_args 0 5
.o 0 5 bbbbb
e_StdIOCommon_stoString;31
.o 0 5 bbbbb
s32
	buildh _Nil 0
	push_b 4
	build_u _ 0 1 n67
	buildh _Cons 2
	push_b 3
	build_u _ 0 1 n66
	buildh _Cons 2
	push_b 2
	build_u _ 0 1 n65
	buildh _Cons 2
	push_b 1
	build_u _ 0 1 n64
	buildh _Cons 2
	push_b 0
	build_u _ 0 1 n63
	buildh _Cons 2
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 5
.d 2 0
	jsr e_StdList_sflatten
.o 1 0
	buildAC ","
.d 2 0
	jsr s49
.o 1 0
.d 1 0
	jmp s45
.nu 0 1 _ _
.o 1 0
n67
	push_node_u _cycle_in_spine 0 1
.o 1 1 b
ea67
.o 1 1 b
s67
	eqB_b TRUE 0
	jmp_true case.190
	jmp case.191
case.190
	buildh _Nil 0
	buildAC "altDown"
	buildh ARRAY 1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
case.191
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
.nu 0 1 _ _
.o 1 0
n66
	push_node_u _cycle_in_spine 0 1
.o 1 1 b
ea66
.o 1 1 b
s66
	eqB_b TRUE 0
	jmp_true case.192
	jmp case.193
case.192
	buildh _Nil 0
	buildAC "controlDown"
	buildh ARRAY 1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
case.193
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
.nu 0 1 _ _
.o 1 0
n65
	push_node_u _cycle_in_spine 0 1
.o 1 1 b
ea65
.o 1 1 b
s65
	eqB_b TRUE 0
	jmp_true case.194
	jmp case.195
case.194
	buildh _Nil 0
	buildAC "commandDown"
	buildh ARRAY 1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
case.195
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
.nu 0 1 _ _
.o 1 0
n64
	push_node_u _cycle_in_spine 0 1
.o 1 1 b
ea64
.o 1 1 b
s64
	eqB_b TRUE 0
	jmp_true case.196
	jmp case.197
case.196
	buildh _Nil 0
	buildAC "optionDown"
	buildh ARRAY 1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
case.197
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
.nu 0 1 _ _
.o 1 0
n63
	push_node_u _cycle_in_spine 0 1
.o 1 1 b
ea63
.o 1 1 b
s63
	eqB_b TRUE 0
	jmp_true case.198
	jmp case.199
case.198
	buildh _Nil 0
	buildAC "shiftDown"
	buildh ARRAY 1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
case.199
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
.export e_StdIOCommon_stoString;22
.descexp e_StdIOCommon_dtoString;22 e_StdIOCommon_ntoString;22 e_StdIOCommon_ltoString;22 1 0 "toString;22"
.o 2 0
e_StdIOCommon_ltoString;22
	pop_a 1
.d 1 0
	jsr ea23
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;22
.o 1 0
e_StdIOCommon_ntoString;22
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea23
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea23
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;22
.o 1 0
s23
	eq_desc e_StdIOCommon_dKeyDown 1 0
	jmp_true case.200
	jmp case.201
case.200
	repl_args 1 1
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	pop_a 1
.d 0 1 b
	jsr BtoAC
.o 1 0
	buildAC "KeyDown "
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	jmp s46
case.201
	pop_a 1
	buildAC "KeyUp"
.d 1 0
	rtn
.export e_StdIOCommon_s==;19
.descexp e_StdIOCommon_d==;19 e_StdIOCommon_n==;19 e_StdIOCommon_l==;19 2 0 "==;19"
.a 0 a20
.o 2 0
e_StdIOCommon_l==;19
	repl_args 1 1
.o 2 0
a20
.d 2 0
	jsr ea20
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;19
.o 1 0
e_StdIOCommon_n==;19
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea20
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea20
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;19
.o 2 0
s20
	pushD_a 0
	eqD_b e_StdIOCommon_dCharKey 2
	jmp_true case.202
	eqD_b e_StdIOCommon_dSpecialKey 3
	jmp_true case.203
	jmp case.204
case.202
	pop_b 1
	repl_args 2 2
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s60
case.203
	pop_b 1
	repl_args 3 3
	push_a 2
	push_a 2
	push_a 2
	push_a 6
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 4 0
	jmp s61
case.204
	pop_b 1
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s62
.o 1 0
s62
	eq_desc e_StdIOCommon_dKeyLost 0 0
	jmp_true case.205
	jmp case.206
case.205
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.206
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 4 0
s61
	eq_desc e_StdIOCommon_dSpecialKey 3 0
	jmp_true case.207
	jmp case.208
case.207
	repl_args 3 3
	push_a 0
	jsr_eval 0
	push_a 4
	jsr_eval 0
	update_a 1 2
	updatepop_a 0 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 2 0
	jsr e_oskey_s==;32
.o 0 1 b
	jmp_false else.209
	push_a 0
	jsr_eval 0
	push_a 4
	jsr_eval 0
	update_a 3 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr s21
.o 0 1 b
	jmp_false else.210
	push_a 0
	jsr_eval 0
	repl_r_args 0 5
	push_a 1
	jsr_eval 0
	repl_r_args 0 5
	pop_a 2
.d 0 10 bbbbbbbbbb
	jmp s31
else.210
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
else.209
	pop_a 5
	pushB FALSE
.d 0 1 b
	rtn
case.208
	pop_a 4
	pushB FALSE
.d 0 1 b
	rtn
.o 3 0
s60
	eq_desc e_StdIOCommon_dCharKey 2 0
	jmp_true case.211
	jmp case.212
case.211
	repl_args 2 2
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	eqC
	jmp_false else.213
	push_a 1
	jsr_eval 0
	push_a 4
	jsr_eval 0
	update_a 1 5
	updatepop_a 0 4
.d 2 0
	jmp s21
else.213
	pop_a 4
	pushB FALSE
.d 0 1 b
	rtn
case.212
	pop_a 3
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_s==;30
.descexp e_StdIOCommon_d==;30 e_StdIOCommon_n==;30 e_StdIOCommon_l==;30 2 0 "==;30"
.a 0 a31
.o 2 0
e_StdIOCommon_l==;30
	repl_args 1 1
.o 2 0
a31
.d 2 0
	jsr ea31
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;30
.o 1 0
e_StdIOCommon_n==;30
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea31
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea31
	jsr_eval 1
	jsr_eval 0
	push_r_args 1 0 5
	repl_r_args 0 5
	pop_a 1
.o 0 10 bbbbbbbbbb
e_StdIOCommon_s==;30
.o 0 10 bbbbbbbbbb
s31
	push_b 5
	push_b 1
	eqB
	jmp_false else.214
	push_b 6
	push_b 2
	eqB
	jmp_false else.215
	push_b 7
	push_b 3
	eqB
	jmp_false else.216
	push_b 8
	push_b 4
	eqB
	jmp_false else.217
	push_b 9
	push_b 5
	update_b 1 11
	updatepop_b 0 10
	eqB
.d 0 1 b
	rtn
else.217
	pop_b 10
	pushB FALSE
.d 0 1 b
	rtn
else.216
	pop_b 10
	pushB FALSE
.d 0 1 b
	rtn
else.215
	pop_b 10
	pushB FALSE
.d 0 1 b
	rtn
else.214
	pop_b 10
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_s==;20
.descexp e_StdIOCommon_d==;20 e_StdIOCommon_n==;20 e_StdIOCommon_l==;20 2 0 "==;20"
.a 0 a21
.o 2 0
e_StdIOCommon_l==;20
	repl_args 1 1
.o 2 0
a21
.d 2 0
	jsr ea21
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;20
.o 1 0
e_StdIOCommon_n==;20
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea21
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea21
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;20
.o 2 0
s21
	eq_desc e_StdIOCommon_dKeyUp 0 0
	jmp_true case.218
	jmp case.219
case.218
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s58
case.219
	repl_args 1 1
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s59
.o 2 0
s59
	eq_desc e_StdIOCommon_dKeyDown 1 0
	jmp_true case.220
	jmp case.221
case.220
	repl_args 1 1
	push_a 0
	jsr_eval 0
	pushB_a 1
	pop_a 1
	push_a 1
	jsr_eval 0
	pushB_a 2
	pop_a 1
	pop_a 2
	eqB
.d 0 1 b
	rtn
case.221
	pop_a 2
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s58
	eq_desc e_StdIOCommon_dKeyUp 0 0
	jmp_true case.222
	jmp case.223
case.222
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.223
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_stoString;18
.descexp e_StdIOCommon_dtoString;18 e_StdIOCommon_ntoString;18 e_StdIOCommon_ltoString;18 1 0 "toString;18"
.o 2 0
e_StdIOCommon_ltoString;18
	pop_a 1
.d 1 0
	jsr ea19
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;18
.o 1 0
e_StdIOCommon_ntoString;18
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea19
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea19
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;18
.o 1 0
s19
	eq_desc e_StdIOCommon_dMark 0 0
	jmp_true case.224
	jmp case.225
case.224
	pop_a 1
	buildAC "Mark"
.d 1 0
	rtn
case.225
	pop_a 1
	buildAC "NoMark"
.d 1 0
	rtn
.export e_StdIOCommon_stoString;17
.descexp e_StdIOCommon_dtoString;17 e_StdIOCommon_ntoString;17 e_StdIOCommon_ltoString;17 1 0 "toString;17"
.o 2 0
e_StdIOCommon_ltoString;17
	pop_a 1
.d 1 0
	jsr ea18
.o 1 0
	push_a 0
	buildh ARRAY 1
	updatepop_a 0 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dtoString;17
.o 1 0
e_StdIOCommon_ntoString;17
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea18
.o 1 0
	push_a 0
	fillh ARRAY 1 2
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea18
	jsr_eval 0
.o 1 0
e_StdIOCommon_stoString;17
.o 1 0
s18
	eq_desc e_StdIOCommon_dAble 0 0
	jmp_true case.226
	jmp case.227
case.226
	pop_a 1
	buildAC "Able"
.d 1 0
	rtn
case.227
	pop_a 1
	buildAC "Unable"
.d 1 0
	rtn
.export e_StdIOCommon_s~;16
.export e_StdIOCommon_ea~;16
.descexp e_StdIOCommon_d~;16 e_StdIOCommon_n~;16 e_StdIOCommon_l~;16 1 0 "~;16"
.o 2 0
e_StdIOCommon_l~;16
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdIOCommon_ea~;16
.n 1 e_StdIOCommon_d~;16 e_StdIOCommon_ea~;16
.o 1 0
e_StdIOCommon_n~;16
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_ea~;16
	jsr_eval 0
.o 2 0
e_StdIOCommon_s~;16
.o 2 0
s17
	eq_desc e_StdIOCommon_dMark 0 0
	jmp_true case.228
	jmp case.229
case.228
	fillh e_StdIOCommon_dNoMark 0 1
	pop_a 1
.d 1 0
	rtn
case.229
	fillh e_StdIOCommon_dMark 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_s~;15
.export e_StdIOCommon_ea~;15
.descexp e_StdIOCommon_d~;15 e_StdIOCommon_n~;15 e_StdIOCommon_l~;15 1 0 "~;15"
.o 2 0
e_StdIOCommon_l~;15
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdIOCommon_ea~;15
.n 1 e_StdIOCommon_d~;15 e_StdIOCommon_ea~;15
.o 1 0
e_StdIOCommon_n~;15
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_ea~;15
	jsr_eval 0
.o 2 0
e_StdIOCommon_s~;15
.o 2 0
s16
	eq_desc e_StdIOCommon_dAble 0 0
	jmp_true case.230
	jmp case.231
case.230
	fillh e_StdIOCommon_dUnable 0 1
	pop_a 1
.d 1 0
	rtn
case.231
	fillh e_StdIOCommon_dAble 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_s==;14
.descexp e_StdIOCommon_d==;14 e_StdIOCommon_n==;14 e_StdIOCommon_l==;14 2 0 "==;14"
.a 0 a15
.o 2 0
e_StdIOCommon_l==;14
	repl_args 1 1
.o 2 0
a15
.d 2 0
	jsr ea15
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;14
.o 1 0
e_StdIOCommon_n==;14
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea15
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea15
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;14
.o 2 0
s15
	eq_desc e_StdIOCommon_dMark 0 0
	jmp_true case.232
	jmp case.233
case.232
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s2
case.233
	push_a 1
	updatepop_a 0 2
.d 1 0
	jsr s2
.o 0 1 b
	notB
.d 0 1 b
	rtn
.export e_StdIOCommon_s==;13
.descexp e_StdIOCommon_d==;13 e_StdIOCommon_n==;13 e_StdIOCommon_l==;13 2 0 "==;13"
.a 0 a14
.o 2 0
e_StdIOCommon_l==;13
	repl_args 1 1
.o 2 0
a14
.d 2 0
	jsr ea14
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;13
.o 1 0
e_StdIOCommon_n==;13
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea14
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea14
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;13
.o 2 0
s14
	eq_desc e_StdIOCommon_dAble 0 0
	jmp_true case.234
	jmp case.235
case.234
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s1
case.235
	push_a 1
	updatepop_a 0 2
.d 1 0
	jsr s1
.o 0 1 b
	notB
.d 0 1 b
	rtn
.o 2 0
s49
	eq_desc _Cons 2 1
	jmp_true case.236
	jmp case.237
case.236
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 3
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 2 0
	jsr s51
.o 1 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
case.237
	pop_a 2
	buildAC ""
.d 1 0
	rtn
.o 2 0
s51
	eq_desc _Cons 2 1
	jmp_true case.238
	jmp case.239
case.238
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	push_a 1
	jsr_eval 0
	push_a 3
	update_a 4 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr s51
.o 1 0
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
case.239
	pop_a 2
	buildAC ""
.d 1 0
	rtn
.o 1 0
s47
	buildAC "]"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "["
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
.o 1 0
s46
	buildAC ")"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "("
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
.o 1 0
s45
	buildAC "}"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	buildAC "{"
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
.export e_StdIOCommon_sstdUnfillUpdAreaLook
.export e_StdIOCommon_eastdUnfillUpdAreaLook
.descexp e_StdIOCommon_dstdUnfillUpdAreaLook e_StdIOCommon_nstdUnfillUpdAreaLook e_StdIOCommon_lstdUnfillUpdAreaLook 3 0 "stdUnfillUpdAreaLook"
.a 3 e_StdIOCommon_eastdUnfillUpdAreaLook
.o 2 0
e_StdIOCommon_lstdUnfillUpdAreaLook
	push_args 0 2 2
	update_a 3 2
	create
	update_a 0 4
	pop_a 1
.d 4 0
	jmp e_StdIOCommon_eastdUnfillUpdAreaLook
.n 3 e_StdIOCommon_dstdUnfillUpdAreaLook e_StdIOCommon_eastdUnfillUpdAreaLook
.o 1 0
e_StdIOCommon_nstdUnfillUpdAreaLook
	push_node _cycle_in_spine 3
.o 4 0
e_StdIOCommon_eastdUnfillUpdAreaLook
	jsr_eval 2
	jsr_eval 1
	push_r_args 1 3 0
	update_a 2 4
	update_a 0 2
	push_a 3
	update_a 2 4
	update_a 0 2
	pop_a 2
.o 6 0
e_StdIOCommon_sstdUnfillUpdAreaLook
.o 6 0
s13
	buildh e_StdPicture_dunfill;103 0
	push_a 5
	push_a 5
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 3 0
	jsr e_commondef_sstateMap2
.o 1 0
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_sstdUnfillNewFrameLook
.export e_StdIOCommon_eastdUnfillNewFrameLook
.descexp e_StdIOCommon_dstdUnfillNewFrameLook e_StdIOCommon_nstdUnfillNewFrameLook e_StdIOCommon_lstdUnfillNewFrameLook 3 0 "stdUnfillNewFrameLook"
.a 3 e_StdIOCommon_eastdUnfillNewFrameLook
.o 2 0
e_StdIOCommon_lstdUnfillNewFrameLook
	push_args 0 2 2
	update_a 3 2
	create
	update_a 0 4
	pop_a 1
.d 4 0
	jmp e_StdIOCommon_eastdUnfillNewFrameLook
.n 3 e_StdIOCommon_dstdUnfillNewFrameLook e_StdIOCommon_eastdUnfillNewFrameLook
.o 1 0
e_StdIOCommon_nstdUnfillNewFrameLook
	push_node _cycle_in_spine 3
.o 4 0
e_StdIOCommon_eastdUnfillNewFrameLook
	jsr_eval 2
	jsr_eval 1
	push_r_args 1 3 0
	update_a 2 4
	update_a 0 2
	push_a 3
	update_a 2 4
	update_a 0 2
	pop_a 2
.o 6 0
e_StdIOCommon_sstdUnfillNewFrameLook
.o 6 0
s12
	push_r_args 2 2 0
	push_a 6
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
.d 4 0
	jmp e_StdPicture_sunfill;103
.export e_StdIOCommon_sstdScrollFunction
.export e_StdIOCommon_eastdScrollFunction
.descexp e_StdIOCommon_dstdScrollFunction e_StdIOCommon_nstdScrollFunction e_StdIOCommon_lstdScrollFunction 2 0 "stdScrollFunction"
.a 2 e_StdIOCommon_eastdScrollFunction
.o 2 0
e_StdIOCommon_lstdScrollFunction
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_StdIOCommon_eastdScrollFunction
.n 2 e_StdIOCommon_dstdScrollFunction e_StdIOCommon_eastdScrollFunction
.o 1 0
e_StdIOCommon_nstdScrollFunction
	push_node _cycle_in_spine 2
.o 3 0
e_StdIOCommon_eastdScrollFunction
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	update_a 0 1
	pop_a 1
.o 2 1 i
e_StdIOCommon_sstdScrollFunction
.o 2 1 i
s11
	buildI_b 0
	push_a 1
	fillh d50 2 3
	pop_a 1
	pop_b 1
.d 1 0
	rtn
.desc d50 _hnf l50 5 0 "stdScrollFunction`;49"
.a 0 a50
.o 2 0
l50
	repl_args 4 4
.o 5 0
a50
.d 5 0
	jsr ea50
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.o 5 0
ea50
	jsr_eval 4
	jsr_eval 3
	jsr_eval 2
	push_r_args 3 0 3
	push_r_args 2 2 0
	pushI_a 3
	update_a 1 5
	update_a 0 4
	update_a 2 3
	pop_a 3
.o 4 4 iiii
s50
	build_r e_StdIOBasic_rRectangle 2 0 1 0
	push_a 1
	push_b 0
	push_b 4
	push_a 5
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
	update_b 1 5
	updatepop_b 0 4
.d 3 2 ii
	jmp s57
.o 3 2 ii
s57
	pushD_a 0
	eqD_b e_StdIOCommon_dSliderIncSmall 0
	jmp_true case.240
	eqD_b e_StdIOCommon_dSliderDecSmall 0
	jmp_true case.241
	eqD_b e_StdIOCommon_dSliderIncLarge 0
	jmp_true case.242
	eqD_b e_StdIOCommon_dSliderDecLarge 0
	jmp_true case.243
	jmp case.244
case.240
	pop_b 1
	push_b 1
	pop_a 3
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
	push_b 1
	update_b 1 3
	updatepop_b 0 2
	addI
.d 0 1 i
	rtn
case.241
	pop_b 1
	push_b 1
	pop_a 3
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
	push_b 1
	update_b 1 3
	updatepop_b 0 2
	subI
.d 0 1 i
	rtn
case.242
	pop_b 1
	push_b 1
	pop_a 1
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
	push_r_args 1 2 0
	buildh e_StdIOCommon_dHorizontal 0
	push_a 3
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	pop_a 1
.d 2 0
	jsr s36
.o 0 1 b
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	jsr s55
.o 0 1 i
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	divI
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	mulI
	push_b 2
	update_b 1 4
	updatepop_b 0 3
	addI
.d 0 1 i
	rtn
case.243
	pop_b 1
	push_b 1
	pop_a 1
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
	push_r_args 1 2 0
	buildh e_StdIOCommon_dHorizontal 0
	push_a 3
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	pop_a 1
.d 2 0
	jsr s36
.o 0 1 b
	update_a 1 3
	updatepop_a 0 2
.d 2 1 b
	jsr s56
.o 0 1 i
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	divI
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	mulI
	push_b 2
	update_b 1 4
	updatepop_b 0 3
	subI
.d 0 1 i
	rtn
case.244
	pop_b 1
	repl_args 1 1
	push_b 1
	updatepop_b 0 2
	update_a 0 2
	pop_a 2
.d 0 1 i
	jsr e_StdInt_sabs;13
.o 0 1 i
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	divI
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	pop_a 1
	mulI
.d 0 1 i
	rtn
.o 2 1 b
s56
	eqB_b TRUE 0
	jmp_true case.245
	jmp case.246
case.245
	push_a 1
	push_a 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr e_StdIOBasic_srectangleSize
.o 0 2 ii
	update_b 0 1
	pop_b 1
.d 0 1 i
	rtn
case.246
	push_a 1
	push_a 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr e_StdIOBasic_srectangleSize
.o 0 2 ii
	pop_b 1
.d 0 1 i
	rtn
.o 2 1 b
s55
	eqB_b TRUE 0
	jmp_true case.247
	jmp case.248
case.247
	push_a 1
	push_a 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr e_StdIOBasic_srectangleSize
.o 0 2 ii
	update_b 0 1
	pop_b 1
.d 0 1 i
	rtn
case.248
	push_a 1
	push_a 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr e_StdIOBasic_srectangleSize
.o 0 2 ii
	pop_b 1
.d 0 1 i
	rtn
.export e_StdIOCommon_s==;35
.descexp e_StdIOCommon_d==;35 e_StdIOCommon_n==;35 e_StdIOCommon_l==;35 2 0 "==;35"
.a 0 a36
.o 2 0
e_StdIOCommon_l==;35
	repl_args 1 1
.o 2 0
a36
.d 2 0
	jsr ea36
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_StdIOCommon_d==;35
.o 1 0
e_StdIOCommon_n==;35
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea36
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea36
	jsr_eval 1
	jsr_eval 0
.o 2 0
e_StdIOCommon_s==;35
.o 2 0
s36
	eq_desc e_StdIOCommon_dHorizontal 0 0
	jmp_true case.249
	jmp case.250
case.249
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s53
case.250
	push_a 1
	updatepop_a 0 2
.d 1 0
	jmp s54
.o 1 0
s54
	eq_desc e_StdIOCommon_dVertical 0 0
	jmp_true case.251
	jmp case.252
case.251
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.252
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.o 1 0
s53
	eq_desc e_StdIOCommon_dHorizontal 0 0
	jmp_true case.253
	jmp case.254
case.253
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.254
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_sviewFrameRange
.descexp e_StdIOCommon_dviewFrameRange e_StdIOCommon_nviewFrameRange e_StdIOCommon_lviewFrameRange 0 0 "viewFrameRange"
.o 1 0
e_StdIOCommon_lviewFrameRange
	halt
.n 0 e_StdIOCommon_dviewFrameRange
.o 1 0
e_StdIOCommon_nviewFrameRange
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea10
.o 2 0
	fill_r e_StdIOBasic_rRectangle 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 0 0
ea10
.o 0 0
e_StdIOCommon_sviewFrameRange
.o 0 0
s10
	pushI 31
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 31
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	build_r e_StdIOBasic_rPoint2 0 2 0 0
	pop_b 2
	pushI 31
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 1
	subI
	pushI 31
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 1
	subI
	build_r e_StdIOBasic_rPoint2 0 2 0 0
	pop_b 2
.d 2 0
	rtn
.export e_StdIOCommon_sviewDomainRange
.descexp e_StdIOCommon_dviewDomainRange e_StdIOCommon_nviewDomainRange e_StdIOCommon_lviewDomainRange 0 0 "viewDomainRange"
.o 1 0
e_StdIOCommon_lviewDomainRange
	halt
.n 0 e_StdIOCommon_dviewDomainRange
.o 1 0
e_StdIOCommon_nviewDomainRange
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea9
.o 2 0
	fill_r e_StdIOBasic_rRectangle 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 0 0
ea9
.o 0 0
e_StdIOCommon_sviewDomainRange
.o 0 0
s9
	pushI 30
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 30
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	build_r e_StdIOBasic_rPoint2 0 2 0 0
	pop_b 2
	pushI 30
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 0
	subI
	pushI 30
	pushI 2
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	pushI 0
	subI
	build_r e_StdIOBasic_rPoint2 0 2 0 0
	pop_b 2
.d 2 0
	rtn
.export e_StdIOCommon_srectangleToUpdateState
.descexp e_StdIOCommon_drectangleToUpdateState e_StdIOCommon_nrectangleToUpdateState e_StdIOCommon_lrectangleToUpdateState 1 0 "rectangleToUpdateState"
.o 2 0
e_StdIOCommon_lrectangleToUpdateState
	pop_a 1
.d 1 0
	jsr ea8
.o 3 0
	build_r e_StdIOCommon_rUpdateState 3 0 0 0
	updatepop_a 0 3
.d 1 0
	rtn
.n 1 e_StdIOCommon_drectangleToUpdateState
.o 1 0
e_StdIOCommon_nrectangleToUpdateState
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea8
.o 3 0
	fill_r e_StdIOCommon_rUpdateState 3 0 3 0 0
	pop_a 3
.d 1 0
	rtn
.o 1 0
ea8
	jsr_eval 0
	repl_r_args 2 0
.o 2 0
e_StdIOCommon_srectangleToUpdateState
.o 2 0
s8
	buildh _Nil 0
	build_r e_StdIOBasic_rRectangle 2 0 1 0
	buildh _Cons 2
	build_r e_StdIOBasic_rRectangle 2 0 1 0
	build_r e_StdIOBasic_rRectangle 2 0 2 0
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	rtn
.export e_StdIOCommon_sgetMouseStateButtonState
.export e_StdIOCommon_eagetMouseStateButtonState
.descexp e_StdIOCommon_dgetMouseStateButtonState e_StdIOCommon_ngetMouseStateButtonState e_StdIOCommon_lgetMouseStateButtonState 1 0 "getMouseStateButtonState"
.o 2 0
e_StdIOCommon_lgetMouseStateButtonState
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdIOCommon_eagetMouseStateButtonState
.n 1 e_StdIOCommon_dgetMouseStateButtonState e_StdIOCommon_eagetMouseStateButtonState
.o 1 0
e_StdIOCommon_ngetMouseStateButtonState
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_eagetMouseStateButtonState
	jsr_eval 0
.o 2 0
e_StdIOCommon_sgetMouseStateButtonState
.o 2 0
s7
	pushD_a 0
	eqD_b e_StdIOCommon_dMouseMove 2
	jmp_true case.255
	eqD_b e_StdIOCommon_dMouseDown 3
	jmp_true case.256
	eqD_b e_StdIOCommon_dMouseDrag 2
	jmp_true case.257
	eqD_b e_StdIOCommon_dMouseUp 2
	jmp_true case.258
	jmp case.259
case.255
	pop_b 1
	repl_args 2 2
	pop_a 2
	fillh e_StdIOCommon_dButtonStillUp 0 0
.d 1 0
	rtn
case.256
	pop_b 1
	repl_args 3 3
	pop_a 2
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	jmp_false else.260
	fillh e_StdIOCommon_dButtonDown 0 1
	pop_a 1
.d 1 0
	rtn
else.260
	pushI 2
	pushI_a 0
	eqI
	jmp_false else.261
	fillh e_StdIOCommon_dButtonDoubleDown 0 1
	pop_a 1
.d 1 0
	rtn
else.261
	fillh e_StdIOCommon_dButtonTripleDown 0 1
	pop_a 1
.d 1 0
	rtn
case.257
	pop_b 1
	repl_args 2 2
	pop_a 2
	fillh e_StdIOCommon_dButtonStillDown 0 0
.d 1 0
	rtn
case.258
	pop_b 1
	repl_args 2 2
	pop_a 2
	fillh e_StdIOCommon_dButtonUp 0 0
.d 1 0
	rtn
case.259
	pop_b 1
	fillh e_StdIOCommon_dButtonUp 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_sgetMouseStateModifiers
.descexp e_StdIOCommon_dgetMouseStateModifiers e_StdIOCommon_ngetMouseStateModifiers e_StdIOCommon_lgetMouseStateModifiers 1 0 "getMouseStateModifiers"
.o 2 0
e_StdIOCommon_lgetMouseStateModifiers
	pop_a 1
.d 1 0
	jsr ea6
.o 0 5 bbbbb
	build_r e_StdIOCommon_rModifiers 0 5 0 0
	pop_b 5
.d 1 0
	rtn
.n 1 e_StdIOCommon_dgetMouseStateModifiers
.o 1 0
e_StdIOCommon_ngetMouseStateModifiers
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea6
.o 0 5 bbbbb
	fill_r e_StdIOCommon_rModifiers 0 5 0 0 0
	pop_b 5
.d 1 0
	rtn
.o 1 0
ea6
	jsr_eval 0
.o 1 0
e_StdIOCommon_sgetMouseStateModifiers
.o 1 0
s6
	pushD_a 0
	eqD_b e_StdIOCommon_dMouseMove 2
	jmp_true case.262
	eqD_b e_StdIOCommon_dMouseDown 3
	jmp_true case.263
	eqD_b e_StdIOCommon_dMouseDrag 2
	jmp_true case.264
	eqD_b e_StdIOCommon_dMouseUp 2
	jmp_true case.265
	jmp case.266
case.262
	pop_b 1
	repl_args 2 2
	pop_a 1
	jsr_eval 0
	repl_r_args 0 5
.d 0 5 bbbbb
	rtn
case.263
	pop_b 1
	repl_args 3 3
	update_a 1 2
	pop_a 2
	jsr_eval 0
	repl_r_args 0 5
.d 0 5 bbbbb
	rtn
case.264
	pop_b 1
	repl_args 2 2
	pop_a 1
	jsr_eval 0
	repl_r_args 0 5
.d 0 5 bbbbb
	rtn
case.265
	pop_b 1
	repl_args 2 2
	pop_a 1
	jsr_eval 0
	repl_r_args 0 5
.d 0 5 bbbbb
	rtn
case.266
	pop_b 1
	pushB FALSE
	pushB FALSE
	pushB FALSE
	pushB FALSE
	pushB FALSE
	pop_a 1
.d 0 5 bbbbb
	rtn
.export e_StdIOCommon_sgetMouseStatePos
.descexp e_StdIOCommon_dgetMouseStatePos e_StdIOCommon_ngetMouseStatePos e_StdIOCommon_lgetMouseStatePos 1 0 "getMouseStatePos"
.o 2 0
e_StdIOCommon_lgetMouseStatePos
	pop_a 1
.d 1 0
	jsr ea5
.o 0 2 ii
	build_r e_StdIOBasic_rPoint2 0 2 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 e_StdIOCommon_dgetMouseStatePos
.o 1 0
e_StdIOCommon_ngetMouseStatePos
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea5
.o 0 2 ii
	fill_r e_StdIOBasic_rPoint2 0 2 0 0 0
	pop_b 2
.d 1 0
	rtn
.o 1 0
ea5
	jsr_eval 0
.o 1 0
e_StdIOCommon_sgetMouseStatePos
.o 1 0
s5
	pushD_a 0
	eqD_b e_StdIOCommon_dMouseMove 2
	jmp_true case.267
	eqD_b e_StdIOCommon_dMouseDown 3
	jmp_true case.268
	eqD_b e_StdIOCommon_dMouseDrag 2
	jmp_true case.269
	eqD_b e_StdIOCommon_dMouseUp 2
	jmp_true case.270
	jmp case.271
case.267
	pop_b 1
	repl_args 2 2
	update_a 0 1
	pop_a 1
	jsr_eval 0
	repl_r_args 0 2
.d 0 2 ii
	rtn
case.268
	pop_b 1
	repl_args 3 3
	update_a 0 2
	pop_a 2
	jsr_eval 0
	repl_r_args 0 2
.d 0 2 ii
	rtn
case.269
	pop_b 1
	repl_args 2 2
	update_a 0 1
	pop_a 1
	jsr_eval 0
	repl_r_args 0 2
.d 0 2 ii
	rtn
case.270
	pop_b 1
	repl_args 2 2
	update_a 0 1
	pop_a 1
	jsr_eval 0
	repl_r_args 0 2
.d 0 2 ii
	rtn
case.271
	pop_b 1
	pop_a 1
.d 0 0
	jmp e_StdIOBasic_szero;21
.export e_StdIOCommon_sgetKeyboardStateKey
.export e_StdIOCommon_eagetKeyboardStateKey
.descexp e_StdIOCommon_dgetKeyboardStateKey e_StdIOCommon_ngetKeyboardStateKey e_StdIOCommon_lgetKeyboardStateKey 1 0 "getKeyboardStateKey"
.o 2 0
e_StdIOCommon_lgetKeyboardStateKey
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdIOCommon_eagetKeyboardStateKey
.n 1 e_StdIOCommon_dgetKeyboardStateKey e_StdIOCommon_eagetKeyboardStateKey
.o 1 0
e_StdIOCommon_ngetKeyboardStateKey
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_eagetKeyboardStateKey
	jsr_eval 0
.o 2 0
e_StdIOCommon_sgetKeyboardStateKey
.o 2 0
s4
	pushD_a 0
	eqD_b e_StdIOCommon_dCharKey 2
	jmp_true case.272
	eqD_b e_StdIOCommon_dSpecialKey 3
	jmp_true case.273
	jmp case.274
case.272
	pop_b 1
	repl_args 2 2
	update_a 0 1
	pop_a 1
	push_a 0
	buildh e_StdIOCommon_dIsCharKey 1
	fillh e_StdMaybe_dJust 1 2
	pop_a 1
.d 1 0
	rtn
case.273
	pop_b 1
	repl_args 3 3
	update_a 0 2
	pop_a 2
	push_a 0
	buildh e_StdIOCommon_dIsSpecialKey 1
	fillh e_StdMaybe_dJust 1 2
	pop_a 1
.d 1 0
	rtn
case.274
	pop_b 1
	fillh e_StdMaybe_dNothing 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_sgetKeyboardStateKeyState
.export e_StdIOCommon_eagetKeyboardStateKeyState
.descexp e_StdIOCommon_dgetKeyboardStateKeyState e_StdIOCommon_ngetKeyboardStateKeyState e_StdIOCommon_lgetKeyboardStateKeyState 1 0 "getKeyboardStateKeyState"
.o 2 0
e_StdIOCommon_lgetKeyboardStateKeyState
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdIOCommon_eagetKeyboardStateKeyState
.n 1 e_StdIOCommon_dgetKeyboardStateKeyState e_StdIOCommon_eagetKeyboardStateKeyState
.o 1 0
e_StdIOCommon_ngetKeyboardStateKeyState
	push_node _cycle_in_spine 1
.o 2 0
e_StdIOCommon_eagetKeyboardStateKeyState
	jsr_eval 0
.o 2 0
e_StdIOCommon_sgetKeyboardStateKeyState
.o 2 0
s3
	pushD_a 0
	eqD_b e_StdIOCommon_dCharKey 2
	jmp_true case.275
	eqD_b e_StdIOCommon_dSpecialKey 3
	jmp_true case.276
	jmp case.277
case.275
	pop_b 1
	repl_args 2 2
	pop_a 1
	jmp_eval_upd
case.276
	pop_b 1
	repl_args 3 3
	update_a 1 2
	pop_a 2
	jmp_eval_upd
case.277
	pop_b 1
	fillh e_StdIOCommon_dKeyUp 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdIOCommon_smarked
.descexp e_StdIOCommon_dmarked e_StdIOCommon_nmarked e_StdIOCommon_lmarked 1 0 "marked"
.o 2 0
e_StdIOCommon_lmarked
	pop_a 1
.d 1 0
	jsr ea2
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_dmarked
.o 1 0
e_StdIOCommon_nmarked
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea2
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea2
	jsr_eval 0
.o 1 0
e_StdIOCommon_smarked
.o 1 0
s2
	eq_desc e_StdIOCommon_dMark 0 0
	jmp_true case.278
	jmp case.279
case.278
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.279
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
.export e_StdIOCommon_senabled
.descexp e_StdIOCommon_denabled e_StdIOCommon_nenabled e_StdIOCommon_lenabled 1 0 "enabled"
.o 2 0
e_StdIOCommon_lenabled
	pop_a 1
.d 1 0
	jsr ea1
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_StdIOCommon_denabled
.o 1 0
e_StdIOCommon_nenabled
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea1
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea1
	jsr_eval 0
.o 1 0
e_StdIOCommon_senabled
.o 1 0
s1
	eq_desc e_StdIOCommon_dAble 0 0
	jmp_true case.280
	jmp case.281
case.280
	pop_a 1
	pushB TRUE
.d 0 1 b
	rtn
case.281
	pop_a 1
	pushB FALSE
.d 0 1 b
	rtn
